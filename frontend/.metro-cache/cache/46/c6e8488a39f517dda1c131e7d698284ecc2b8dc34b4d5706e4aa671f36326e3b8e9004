{"dependencies":[{"name":"../../../isSameWeek.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"0XeqMMVsMSwZYyxfmVXrfrOIxs4=","exportNames":["*"],"imports":1}},{"name":"../../../toDate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":44,"index":97}}],"key":"xzxuyChWYCRlT/YHMXSQYUfBQfQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"formatRelative\", {\n    enumerable: true,\n    get: function () {\n      return formatRelative;\n    }\n  });\n  var _isSameWeekJs = require(_dependencyMap[0], \"../../../isSameWeek.js\");\n  var _toDateJs = require(_dependencyMap[1], \"../../../toDate.js\");\n  const accusativeWeekdays = [\"неділю\", \"понеділок\", \"вівторок\", \"середу\", \"четвер\", \"п’ятницю\", \"суботу\"];\n  function lastWeek(day) {\n    const weekday = accusativeWeekdays[day];\n    switch (day) {\n      case 0:\n      case 3:\n      case 5:\n      case 6:\n        return \"'у минулу \" + weekday + \" о' p\";\n      case 1:\n      case 2:\n      case 4:\n        return \"'у минулий \" + weekday + \" о' p\";\n    }\n  }\n  function thisWeek(day) {\n    const weekday = accusativeWeekdays[day];\n    return \"'у \" + weekday + \" о' p\";\n  }\n  function nextWeek(day) {\n    const weekday = accusativeWeekdays[day];\n    switch (day) {\n      case 0:\n      case 3:\n      case 5:\n      case 6:\n        return \"'у наступну \" + weekday + \" о' p\";\n      case 1:\n      case 2:\n      case 4:\n        return \"'у наступний \" + weekday + \" о' p\";\n    }\n  }\n  const lastWeekFormat = (dirtyDate, baseDate, options) => {\n    const date = (0, _toDateJs.toDate)(dirtyDate);\n    const day = date.getDay();\n    if ((0, _isSameWeekJs.isSameWeek)(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  };\n  const nextWeekFormat = (dirtyDate, baseDate, options) => {\n    const date = (0, _toDateJs.toDate)(dirtyDate);\n    const day = date.getDay();\n    if ((0, _isSameWeekJs.isSameWeek)(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  };\n  const formatRelativeLocale = {\n    lastWeek: lastWeekFormat,\n    yesterday: \"'вчора о' p\",\n    today: \"'сьогодні о' p\",\n    tomorrow: \"'завтра о' p\",\n    nextWeek: nextWeekFormat,\n    other: \"P\"\n  };\n  const formatRelative = (token, date, baseDate, options) => {\n    const format = formatRelativeLocale[token];\n    if (typeof format === \"function\") {\n      return format(date, baseDate, options);\n    }\n    return format;\n  };\n});","lineCount":81,"map":[[7,2,82,0,"Object"],[7,8,82,0],[7,9,82,0,"defineProperty"],[7,23,82,0],[7,24,82,0,"exports"],[7,31,82,0],[8,4,82,0,"enumerable"],[8,14,82,0],[9,4,82,0,"get"],[9,7,82,0],[9,18,82,0,"get"],[9,19,82,0],[10,6,82,0],[10,13,82,0,"formatRelative"],[10,27,82,0],[11,4,82,0],[12,2,82,0],[13,2,1,0],[13,6,1,0,"_isSameWeekJs"],[13,19,1,0],[13,22,1,0,"require"],[13,29,1,0],[13,30,1,0,"_dependencyMap"],[13,44,1,0],[14,2,2,0],[14,6,2,0,"_toDateJs"],[14,15,2,0],[14,18,2,0,"require"],[14,25,2,0],[14,26,2,0,"_dependencyMap"],[14,40,2,0],[15,2,4,0],[15,8,4,6,"accusativeWeekdays"],[15,26,4,24],[15,29,4,27],[15,30,5,2],[15,38,5,10],[15,40,6,2],[15,51,6,13],[15,53,7,2],[15,63,7,12],[15,65,8,2],[15,73,8,10],[15,75,9,2],[15,83,9,10],[15,85,10,2],[15,95,10,12],[15,97,11,2],[15,105,11,10],[15,106,12,1],[16,2,14,0],[16,11,14,9,"lastWeek"],[16,19,14,17,"lastWeek"],[16,20,14,18,"day"],[16,23,14,21],[16,25,14,23],[17,4,15,2],[17,10,15,8,"weekday"],[17,17,15,15],[17,20,15,18,"accusativeWeekdays"],[17,38,15,36],[17,39,15,37,"day"],[17,42,15,40],[17,43,15,41],[18,4,17,2],[18,12,17,10,"day"],[18,15,17,13],[19,6,18,4],[19,11,18,9],[19,12,18,10],[20,6,19,4],[20,11,19,9],[20,12,19,10],[21,6,20,4],[21,11,20,9],[21,12,20,10],[22,6,21,4],[22,11,21,9],[22,12,21,10],[23,8,22,6],[23,15,22,13],[23,27,22,25],[23,30,22,28,"weekday"],[23,37,22,35],[23,40,22,38],[23,47,22,45],[24,6,23,4],[24,11,23,9],[24,12,23,10],[25,6,24,4],[25,11,24,9],[25,12,24,10],[26,6,25,4],[26,11,25,9],[26,12,25,10],[27,8,26,6],[27,15,26,13],[27,28,26,26],[27,31,26,29,"weekday"],[27,38,26,36],[27,41,26,39],[27,48,26,46],[28,4,27,2],[29,2,28,0],[30,2,30,0],[30,11,30,9,"thisWeek"],[30,19,30,17,"thisWeek"],[30,20,30,18,"day"],[30,23,30,21],[30,25,30,23],[31,4,31,2],[31,10,31,8,"weekday"],[31,17,31,15],[31,20,31,18,"accusativeWeekdays"],[31,38,31,36],[31,39,31,37,"day"],[31,42,31,40],[31,43,31,41],[32,4,33,2],[32,11,33,9],[32,16,33,14],[32,19,33,17,"weekday"],[32,26,33,24],[32,29,33,27],[32,36,33,34],[33,2,34,0],[34,2,36,0],[34,11,36,9,"nextWeek"],[34,19,36,17,"nextWeek"],[34,20,36,18,"day"],[34,23,36,21],[34,25,36,23],[35,4,37,2],[35,10,37,8,"weekday"],[35,17,37,15],[35,20,37,18,"accusativeWeekdays"],[35,38,37,36],[35,39,37,37,"day"],[35,42,37,40],[35,43,37,41],[36,4,39,2],[36,12,39,10,"day"],[36,15,39,13],[37,6,40,4],[37,11,40,9],[37,12,40,10],[38,6,41,4],[38,11,41,9],[38,12,41,10],[39,6,42,4],[39,11,42,9],[39,12,42,10],[40,6,43,4],[40,11,43,9],[40,12,43,10],[41,8,44,6],[41,15,44,13],[41,29,44,27],[41,32,44,30,"weekday"],[41,39,44,37],[41,42,44,40],[41,49,44,47],[42,6,45,4],[42,11,45,9],[42,12,45,10],[43,6,46,4],[43,11,46,9],[43,12,46,10],[44,6,47,4],[44,11,47,9],[44,12,47,10],[45,8,48,6],[45,15,48,13],[45,30,48,28],[45,33,48,31,"weekday"],[45,40,48,38],[45,43,48,41],[45,50,48,48],[46,4,49,2],[47,2,50,0],[48,2,52,0],[48,8,52,6,"lastWeekFormat"],[48,22,52,20],[48,25,52,23,"lastWeekFormat"],[48,26,52,24,"dirtyDate"],[48,35,52,33],[48,37,52,35,"baseDate"],[48,45,52,43],[48,47,52,45,"options"],[48,54,52,52],[48,59,52,57],[49,4,53,2],[49,10,53,8,"date"],[49,14,53,12],[49,17,53,15],[49,21,53,15,"toDate"],[49,30,53,21],[49,31,53,21,"toDate"],[49,37,53,21],[49,39,53,22,"dirtyDate"],[49,48,53,31],[49,49,53,32],[50,4,54,2],[50,10,54,8,"day"],[50,13,54,11],[50,16,54,14,"date"],[50,20,54,18],[50,21,54,19,"getDay"],[50,27,54,25],[50,28,54,26],[50,29,54,27],[51,4,56,2],[51,8,56,6],[51,12,56,6,"isSameWeek"],[51,25,56,16],[51,26,56,16,"isSameWeek"],[51,36,56,16],[51,38,56,17,"date"],[51,42,56,21],[51,44,56,23,"baseDate"],[51,52,56,31],[51,54,56,33,"options"],[51,61,56,40],[51,62,56,41],[51,64,56,43],[52,6,57,4],[52,13,57,11,"thisWeek"],[52,21,57,19],[52,22,57,20,"day"],[52,25,57,23],[52,26,57,24],[53,4,58,2],[53,5,58,3],[53,11,58,9],[54,6,59,4],[54,13,59,11,"lastWeek"],[54,21,59,19],[54,22,59,20,"day"],[54,25,59,23],[54,26,59,24],[55,4,60,2],[56,2,61,0],[56,3,61,1],[57,2,63,0],[57,8,63,6,"nextWeekFormat"],[57,22,63,20],[57,25,63,23,"nextWeekFormat"],[57,26,63,24,"dirtyDate"],[57,35,63,33],[57,37,63,35,"baseDate"],[57,45,63,43],[57,47,63,45,"options"],[57,54,63,52],[57,59,63,57],[58,4,64,2],[58,10,64,8,"date"],[58,14,64,12],[58,17,64,15],[58,21,64,15,"toDate"],[58,30,64,21],[58,31,64,21,"toDate"],[58,37,64,21],[58,39,64,22,"dirtyDate"],[58,48,64,31],[58,49,64,32],[59,4,65,2],[59,10,65,8,"day"],[59,13,65,11],[59,16,65,14,"date"],[59,20,65,18],[59,21,65,19,"getDay"],[59,27,65,25],[59,28,65,26],[59,29,65,27],[60,4,66,2],[60,8,66,6],[60,12,66,6,"isSameWeek"],[60,25,66,16],[60,26,66,16,"isSameWeek"],[60,36,66,16],[60,38,66,17,"date"],[60,42,66,21],[60,44,66,23,"baseDate"],[60,52,66,31],[60,54,66,33,"options"],[60,61,66,40],[60,62,66,41],[60,64,66,43],[61,6,67,4],[61,13,67,11,"thisWeek"],[61,21,67,19],[61,22,67,20,"day"],[61,25,67,23],[61,26,67,24],[62,4,68,2],[62,5,68,3],[62,11,68,9],[63,6,69,4],[63,13,69,11,"nextWeek"],[63,21,69,19],[63,22,69,20,"day"],[63,25,69,23],[63,26,69,24],[64,4,70,2],[65,2,71,0],[65,3,71,1],[66,2,73,0],[66,8,73,6,"formatRelativeLocale"],[66,28,73,26],[66,31,73,29],[67,4,74,2,"lastWeek"],[67,12,74,10],[67,14,74,12,"lastWeekFormat"],[67,28,74,26],[68,4,75,2,"yesterday"],[68,13,75,11],[68,15,75,13],[68,28,75,26],[69,4,76,2,"today"],[69,9,76,7],[69,11,76,9],[69,27,76,25],[70,4,77,2,"tomorrow"],[70,12,77,10],[70,14,77,12],[70,28,77,26],[71,4,78,2,"nextWeek"],[71,12,78,10],[71,14,78,12,"nextWeekFormat"],[71,28,78,26],[72,4,79,2,"other"],[72,9,79,7],[72,11,79,9],[73,2,80,0],[73,3,80,1],[74,2,82,7],[74,8,82,13,"formatRelative"],[74,22,82,27],[74,25,82,30,"formatRelative"],[74,26,82,31,"token"],[74,31,82,36],[74,33,82,38,"date"],[74,37,82,42],[74,39,82,44,"baseDate"],[74,47,82,52],[74,49,82,54,"options"],[74,56,82,61],[74,61,82,66],[75,4,83,2],[75,10,83,8,"format"],[75,16,83,14],[75,19,83,17,"formatRelativeLocale"],[75,39,83,37],[75,40,83,38,"token"],[75,45,83,43],[75,46,83,44],[76,4,85,2],[76,8,85,6],[76,15,85,13,"format"],[76,21,85,19],[76,26,85,24],[76,36,85,34],[76,38,85,36],[77,6,86,4],[77,13,86,11,"format"],[77,19,86,17],[77,20,86,18,"date"],[77,24,86,22],[77,26,86,24,"baseDate"],[77,34,86,32],[77,36,86,34,"options"],[77,43,86,41],[77,44,86,42],[78,4,87,2],[79,4,89,2],[79,11,89,9,"format"],[79,17,89,15],[80,2,90,0],[80,3,90,1],[81,0,90,2],[81,3]],"functionMap":{"names":["<global>","lastWeek","thisWeek","nextWeek","lastWeekFormat","nextWeekFormat","formatRelative"],"mappings":"AAA;ACa;CDc;AEE;CFI;AGE;CHc;uBIE;CJS;uBKE;CLQ;8BMW;CNQ"},"hasCjsExports":false},"type":"js/module"}]}